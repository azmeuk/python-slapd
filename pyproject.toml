[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool]
[tool.poetry]
name = "slapd"
version = "0.1.5"
description = "Controls a slapd process in a pythonic way"
license = "MIT"
keywords = ["ldap", "slapd"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
authors = ["python-ldap team <python-ldap@python.org>"]
maintainers = [
    "Ã‰loi Rivard <eloi.rivard@aquilenet.fr>",
]
homepage = "https://slapd.readthedocs.io/en/latest/"
documentation = "https://slapd.readthedocs.io/en/latest/"
repository = "https://gitlab.com/python-ldap/python-slapd"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
coverage = "*"
pytest = "*"
pytest-cov = "*"
tox = "*"
mock = "*"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
recommonmark = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
sphinx-issues = "*"

[tool.coverage.run]
source = [
    "tests",
    "slapd",
]

omit = [
    ".tox/*",
]

[tool.ruff.lint]
select = [
    "D", # pydocstyle
    "B", # flake8-bugbear
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "E722", # bare-except
    "D100", # public module
    "D101", # public class
    "D102", # public method
    "D103", # public function
    "D104", # public package
    "D105", # magic method
    "D106", # nested class
    "D107", # public init
    "D203", # no-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
addopts = "--durations=10 --color=yes --showlocals --full-trace --doctest-modules --doctest-glob='*.rst'"
norecursedirs = ".tox tests/perf .eggs .git build doc"
doctest_optionflags= "ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL ELLIPSIS"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = doc,py38,py39,py310,py311,py312,coverage
skipsdist=true

[testenv]
whitelist_externals = poetry
commands =
    pip install poetry
    poetry install
    poetry run pytest {posargs}

[testenv:doc]
commands =
    pip install poetry
    poetry install --only doc
    poetry run sphinx-build doc build/sphinx/html

[testenv:coverage]
commands =
    pip install poetry
    poetry install
    poetry run coverage erase
    poetry run pytest --cov {posargs}
    poetry run coverage html
"""
